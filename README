# üìë Legal Clause Classification ‚Äì Deployment Guide

This repository contains a prototype application for classifying contract clauses using a fine-tuned **Legal-BERT + LoRA** model. The app is built with **Streamlit** for interactivity and supports text input as well as `.txt`, `.pdf`, and `.docx` uploads.

---

## Quickstart (Local Deployment)

1. Clone the repo:

   ```bash
   git clone https://github.com/your-username/legal-clause-classifier.git
   cd legal-clause-classifier
   ```

2. Create and activate a virtual environment:

   ```bash
   python3 -m venv venv
   source venv/bin/activate   # Linux/Mac
   venv\Scripts\activate      # Windows
   ```

3. Install requirements:

   ```bash
   pip install -r requirements.txt
   ```

4. Run Streamlit app:

   ```bash
   streamlit run app.py
   ```

5. Open browser at [http://localhost:8501](http://localhost:8501).

---

## üê≥ Docker Deployment

1. Build the Docker image:

   ```bash
   docker build -t legal-clause-classifier .
   ```

2. Run the container:

   ```bash
   docker run -p 8501:8501 legal-clause-classifier
   ```

3. Visit [http://localhost:8501](http://localhost:8501).

---

## üåê Streamlit Community Cloud (Optional)

1. Push this repo to GitHub.
2. Go to [https://share.streamlit.io/](https://share.streamlit.io/).
3. Connect your repo, select `app.py` as entrypoint.
4. Streamlit Cloud will automatically install from `requirements.txt` and launch your app.

---

## üìÇ Sample Files

Located in the `sample_inputs/` folder:

* `non_compete.txt` ‚Üí A short Non compete clause.
* `termination_clause.docx` ‚Üí Example Termination for Convenience clause.
* `cap_on_liability_clause.pdf` ‚Üí Example Cap on Liability clause.
* `governing_law_clause.txt` ‚Üí Example Governing law clause.
* `notice_period_to_terminate_withdrawal.docx` ‚Üí Example Cap on Liability clause.

These files are provided so users can quickly test the system.

---

## üñ•Ô∏è User Facilitation Texts (UI)

Inside `app.py`, the UI guides users with helper texts:

* **Text Area Placeholder:**
  `"Paste or upload a contract clause. The model will predict the most likely legal category."`

* **File Upload Instruction:**
  `"Supported file types: .txt, .pdf, .docx. Upload one file at a time for analysis."`

* **Disclaimer Message (Sidebar or Footer):**
  `"‚ö†Ô∏è Disclaimer: This tool is an assistive system for clause classification. Predictions are probabilistic and should not be treated as legal advice."`

* **Threshold-Based Review:**
  `"If model confidence is below 0.75, the clause will be flagged for human review."`

---

## ‚öôÔ∏è Metadata & Models

* Trained LoRA model weights in: `./peft_lora_legalbert_model/model_files`
* Label encoder: `./label_encoder.joblib`
* Requirements: `requirements.txt`
* Dockerfile: Provided for reproducible builds

---

